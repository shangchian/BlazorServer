@page "/bookedit/{id:int}"
@using Microsoft.AspNetCore.Components.Forms


<PageTitle> Book Edit </PageTitle>
<h1>BookEdit</h1>
<div class="row">
    <div class="col-md-8">
        <EditForm Model="@Book" OnValidSubmit="HandleSubmit">
            <DataAnnotationsValidator />
            <ValidationSummary />
            <div class="mb-3">
                <label for="Title" class="form-label">Title</label>
                <InputText id="Title" @bind-Value="Book.Title" class="form-control" />
                <ValidationMessage For="@(() => Book.Title)" />
            </div>
            <div class="mb-3">
                <label for="Price" class="form-label">Price</label>
                <InputNumber id="Price" @bind-Value="Book.Price" class="form-control" />
            </div>
            <div class="mb-3">
                <label for="PublishDate" class="form-label">PublishDate</label>
                <InputDate id="PublishDate" @bind-Value="Book.PublishDate" class="form-control" />
            </div>
            <div class="mb-3">
                <label for="InStock" class="form-label">InStock</label>
                <InputCheckbox id="InStock" @bind-Value="Book.InStock" class="form-check-input" />
            </div>
            <div class="mb-3">
                <label for="Description" class="form-label">Description</label>
                <InputText id="Description" @bind-Value="Book.Description" class="form-control" />
            </div>
            <div class="mb-3">
                <input type="submit" value="Save" class="btn btn-primary" />
                <a href="/booklist" class="btn btn-primary m-1"> Back to List</a>
            </div>
        </EditForm>
    </div>

    <div class="form-group form-check">
        <input type="checkbox" class="form-check-input" id="exampleCheck1">
        <label class="form-check-label" for="exampleCheck1">Check me out</label>
    </div>
    <button type="submit" class="btn btn-primary">Submit</button>
</div>




@code {
    [Parameter]
    public int Id { get; set; }
    public Book Book { get; set; } = new Book();


    [Inject]
    public BlazorServer.Services.IBookService BookService { get; set; } = default!;

    [Inject]
    public NavigationManager NavigationManager { get; set; } = null!;

    protected async override Task OnInitializedAsync()
    {
        Book = await BookService.GetBook(Id) ?? new Book();
    }

    protected async Task HandleSubmit()
    {
        await BookService.UpdateBook(Book);
        NavigationManager.NavigateTo("/booklist");  // 只要同意就會跳回上一頁的圖書列表
    }
}
