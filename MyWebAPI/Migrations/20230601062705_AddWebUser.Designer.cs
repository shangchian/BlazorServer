// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyWebAPI.Models;

#nullable disable

namespace MyWebAPI.Migrations
{
    [DbContext(typeof(BookContext))]
    [Migration("20230601062705_AddWebUser")]
    partial class AddWebUser
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MyModels.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("InStock")
                        .HasColumnType("bit");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<DateTime>("PublishDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Description = " Essential Programming Language ",
                            InStock = true,
                            Price = 250,
                            PublishDate = new DateTime(2019, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = " Essential Programming Language "
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            Description = " Telling Arts ",
                            InStock = true,
                            Price = 245,
                            PublishDate = new DateTime(2019, 4, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = " Telling Arts "
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            Description = " Marvel ",
                            InStock = true,
                            Price = 150,
                            PublishDate = new DateTime(2019, 2, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = " Marvel "
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 1,
                            Description = " The beauty of cook ",
                            InStock = true,
                            Price = 450,
                            PublishDate = new DateTime(2019, 12, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = " The beauty of cook "
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 1,
                            Description = " Learning how to cook ",
                            InStock = true,
                            Price = 450,
                            PublishDate = new DateTime(2019, 1, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = " Learning how to cook "
                        });
                });

            modelBuilder.Entity("MyModels.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            CategoryName = "Computers"
                        },
                        new
                        {
                            CategoryId = 2,
                            CategoryName = "Arts"
                        },
                        new
                        {
                            CategoryId = 3,
                            CategoryName = "Commics"
                        },
                        new
                        {
                            CategoryId = 4,
                            CategoryName = "Cooking"
                        });
                });

            modelBuilder.Entity("MyModels.WebUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("WebUsers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Password = "111",
                            Role = "Administrator",
                            UserName = "admin"
                        },
                        new
                        {
                            Id = 2,
                            Password = "111",
                            Role = "User",
                            UserName = "user"
                        });
                });

            modelBuilder.Entity("MyModels.Book", b =>
                {
                    b.HasOne("MyModels.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });
#pragma warning restore 612, 618
        }
    }
}
